<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yshujia.mapper.ArticleMapper">
	
	<!-- 公共的 WHERE 条件片段 -->
	<sql id="article_where">
		<where>
			<if test="id != null">and ta.id = #{id}</if>
			<if test="title != null">and ta.title like concat('%', #{title}, '%')</if>
			<if test="labelId != null">and ta.label_id = #{labelId}</if>
			<if test="reviewed != null">and ta.is_reviewed = #{reviewed}</if>
			<if test="enabled != null">and ta.is_enabled = #{enabled}</if>
			<if test="likeable != null">and ta.is_likeable = #{likeable}</if>
			<if test="commentable != null">and ta.is_commentable = #{commentable}</if>
			<if test="recommend != null">and ta.is_recommend = #{recommend}</if>
			<if test="hasVideo != null">and ta.has_video = #{hasVideo}</if>
			<if test="content != null">and ta.content = #{content}</if>
			<if test="copyright != null">and ta.copyright = #{copyright}</if>
			<if test="createTime != null">and ta.create_time &gt;= #{createTime}</if>
			<if test="updateTime != null">and ta.update_time &gt;= #{updateTime}</if>
			<if test="createBy != null">and ta.create_by = #{createBy}</if>
			<if test="updateBy != null">and ta.update_by = #{updateBy}</if>
		</where>
	</sql>
	
	<sql id="UI_Column_List">
		ta.id, ta.label_id, ta.title, ta.cover, ta.content, ta.copyright,
		ta.like_count, ta.view_count, ta.comment_count, ta.has_video, ta.password_tip,
		ta.create_time, ta.update_time,  ta.is_likeable, ta.is_commentable
	</sql>
	
	<resultMap id="ArticleLabelVO" type="cn.yshujia.ui.vo.ArticleLabelVO">
		<id column="id" property="labelId"/>
		<result column="name" property="labelName"/>
		<result column="cover" property="labelCover" typeHandler="cn.yshujia.handler.domain.DomainHandler"/>
		<result column="article_count" property="articleCount"/>
	</resultMap>
	
	<resultMap id="ArticleVO" type="cn.yshujia.ui.vo.ArticleVO">
		<id column="id" property="id"/>
		<result column="label_id" property="labelId"/>
		<result column="label_name" property="labelName"/>
		<result column="classify_id" property="classifyId"/>
		<result column="classify_name" property="classifyName"/>
		<result column="title" property="title"/>
		<result column="cover" property="cover" typeHandler="cn.yshujia.handler.domain.DomainHandler"/>
		<result column="content" property="content" typeHandler="cn.yshujia.handler.domain.DomainContentHandler"/>
		<result column="copyright" property="copyright"/>
		<result column="like_count" property="likeCount"/>
		<result column="view_count" property="viewCount"/>
		<result column="comment_count" property="commentCount"/>
		<result column="has_video" property="hasVideo"/>
		<result column="password_tip" property="passwordTip"/>
		<result column="is_likeable" property="likeable"/>
		<result column="is_commentable" property="commentable"/>
	</resultMap>
	
	<select id="one" resultMap="ArticleVO">
		select
		<include refid="UI_Column_List"/>,
		tl.name as label_name,
		tc.id as classify_id,
		tc.name as classify_name
		from t_article ta
		join t_label tl on tl.id = ta.label_id
		join t_classify tc on tc.id = tl.classify_id
		<include refid="article_where"/>
	</select>
	
	<!-- 查询归档信息 -->
	<select id="listArticleLabelVO" resultMap="ArticleLabelVO">
		select tl.id, tl.name, tl.cover, count(ta.id) as article_count
		from t_article ta
			     right join t_label tl on ta.label_id = tl.id
		where tl.classify_id = #{id}
		group by tl.id
	</select>
	
	<select id="list" resultMap="ArticleVO">
		select
		<include refid="UI_Column_List"/>,
		tl.name as label_name,
		tc.id as classify_id,
		tc.name as classify_name
		from t_article ta
		join t_label tl on tl.id = ta.label_id
		join t_classify tc on tc.id = tl.classify_id
		<include refid="article_where"/>
		order by ta.id desc
	</select>
	
	<select id="listByLabelIds" resultMap="ArticleVO">
		select
		<include refid="UI_Column_List"/>,
		tl.name as label_name,
		tc.id as classify_id,
		tc.name as classify_name
		from t_article ta
		join t_label tl on tl.id = ta.label_id
		join t_classify tc on tc.id = tl.classify_id
		where ta.is_enabled = 1 and ta.is_reviewed = 1 and ta.label_id in
		<foreach collection="ids" item="labelId" open="(" separator="," close=")">
			#{labelId}
		</foreach>
		order by ta.id desc
	</select>
	
	
	<!-- 管理端 -->
	<sql id="Admin_Column_List">
		ta.id, ta.label_id, ta.title, ta.cover, ta.content, ta.copyright, ta.like_count,
        ta.view_count, ta.comment_count, ta.has_video, ta.video_url, ta.password,
        ta.password_tip, ta.create_time, ta.update_time,  ta.is_recommend,
		ta.is_likeable, ta.is_commentable, ta.is_enabled, ta.is_reviewed
	</sql>
	
	<resultMap id="AdminArticleVO" type="cn.yshujia.admin.vo.AdminArticleVO" extends="ArticleVO">
		<result column="is_reviewed" property="reviewed"/>
		<result column="is_enabled" property="enabled"/>
		<result column="is_recommend" property="recommend"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="create_username" property="createUsername"/>
		<result column="update_username" property="updateUsername"/>
	</resultMap>
	
	<select id="listByAdmin" resultMap="AdminArticleVO">
		select
		<include refid="Admin_Column_List"/>,
		tl.name as label_name,
		tu.username as create_username,
		(select username from t_user where id = ta.update_by) as update_username
		from t_article ta
		left join t_label tl on tl.id = ta.label_id
		left join t_user tu on tu.id = ta.create_by
		<include refid="article_where"/>
		order by ta.id desc
	</select>
	
	<select id="oneByAdmin" resultMap="AdminArticleVO">
		select
		<include refid="Admin_Column_List"/>
		from t_article ta
		<include refid="article_where"/>
	</select>
</mapper>
